@if (ViewBag.ErrorCode == Constants.fatalErrorCode)
{
    <div id="contactContainerDiv">
        <div class="col-sm-12" style="font-size: 1.5em">
            <br />
            <br />
            The following unexpected error was encountered:
            <br />
            <br />
            <span class=" text-danger">@ViewBag.ErrorMessage</span>
            <br />
            <br />
            Please contact technical support.
        </div>
    </div>
}
else
{
    @model AppTrack.ViewModels.VendorDocumentViewModel
    if (User.IsInRole("VendorAdmin"))
    {
        ViewBag.Disabled = "";
    }
    else
    {
        ViewBag.Disabled = " disabled";
    }

    if (ViewBag.PageLayout == "")
    {
        <h2>Vendor Document Update</h2>
    }
    <div id="documentContainerDiv">
        <div class="col-sm-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>

        @if (ViewBag.Disabled == "")
        {
            <div class="col-sm-3 pull-right" style="text-align:right;">
                &nbsp;<button class="btn btn-xs btn-info" onclick="showAddDocumentForm()" id="addDocumentButton">
                    Add Document
                </button>
            </div>
            <div class="col-sm-3 pull-right" style="text-align:right;">
                &nbsp;<button class="btn btn-xs btn-info" onclick="showAddDocuSignForm()" id="addDocuSignButton">
                    Add DocuSign Document
                </button>
            </div>
        }
        <div style="clear:both"></div>

        <div class="row" style="padding-top:10px;">
            <div class="filterbar" id="updateDocuSignFormDiv" style="display:none;">

                @using (Html.BeginForm("DocuSign", "Vendor", FormMethod.Post, new { @Id = "updateDocuSignForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="col-sm-12">
                        <input type="hidden" name="ErrorCode" id="ErrorCode" value="@ViewBag.ErrorCode" />
                        <input type="hidden" name="pageLayout" id="pageLayout" value="@ViewBag.PageLayout" />

                        @Html.HiddenFor(model => model.vendorDocument.CustID)
                        @Html.HiddenFor(model => model.vendorDocument.DocumentID)

                        <div class="col-sm-6">
                            @Html.LabelFor(model => model.vendorDocument.DocumentName, htmlAttributes: new { @class = "control-label" })
                            <br />
                            @Html.EditorFor(model => model.vendorDocument.DocumentName, new { htmlAttributes = new { @class = "form-control" + ViewBag.Disabled, maxlength = "100" } })
                            @Html.ValidationMessageFor(model => model.vendorDocument.DocumentName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-6">
                            @Html.LabelFor(model => model.vendorDocument.TemplateID, htmlAttributes: new { @class = "control-label" })
                            <br />
                            @Html.EditorFor(model => model.vendorDocument.TemplateID, new { htmlAttributes = new { @class = "form-control" + ViewBag.Disabled } })
                            @Html.ValidationMessageFor(model => model.vendorDocument.TemplateID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.vendorDocument.DocumentDescription, htmlAttributes: new { @class = "control-label" })
                            <br />
                            @Html.TextAreaFor(model => model.vendorDocument.DocumentDescription, new { @rows = 3, @class = "form-control" + ViewBag.Disabled, maxlength = "500" })
                            @Html.ValidationMessageFor(model => model.vendorDocument.DocumentDescription, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-12 pull-right" style="text-align:right; padding-top:15px;">
                            @if (ViewBag.Disabled == "")
                            {
                                <input type="submit" name="SubmitAction" value="Save" class="btn btn-xs btn-info" />
                            }
                            &nbsp;
                            <span class="btn btn-xs btn-info" onclick="window.location.href='@Url.Action("Documents","Vendor", new {VendorID = @Model.vendorDocument.CustID, DocumentID = 0, PageLayout = @ViewBag.PageLayout})'">Cancel</span>
                        </div>
                    </div>
                }
            </div>
            <div class="filterbar" id="updateDocumentFormDiv" style="display:none;">

                @using (Html.BeginForm("Documents", "Vendor", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "updateDocumentForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="col-sm-12">
                        <input type="hidden" name="ErrorCode" id="ErrorCode" value="@ViewBag.ErrorCode" />
                        <input type="hidden" name="pageLayout" id="pageLayout" value="@ViewBag.PageLayout" />

                        @Html.HiddenFor(model => model.vendorDocument.CustID)
                        @Html.HiddenFor(model => model.vendorDocument.DocumentID)

                        <div class="col-sm-6">
                            @Html.LabelFor(model => model.vendorDocument.DocumentName, htmlAttributes: new { @class = "control-label" })
                            <br />
                            @Html.EditorFor(model => model.vendorDocument.DocumentName, new { htmlAttributes = new { @class = "form-control" + ViewBag.Disabled, maxlength = "100" } })
                            @Html.ValidationMessageFor(model => model.vendorDocument.DocumentName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-6">
                            @if (Model.vendorDocument.DocumentID == 0)
                            // Adding a new document
                            {
                                <label for="file" class="control-label">Upload File</label>
                                <input type="file" name="documentFile" id="documentFileID" class="form-control" />
                            }
                            else
                            // Editing a document so hide file upload and show file name
                            {
                                <label class="control-label">File Name</label>
                                <br />
                                <span class="form-control" disabled="disabled">@Model.vendorDocument.FileName</span>
                            }
                        </div>
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.vendorDocument.DocumentDescription, htmlAttributes: new { @class = "control-label" })
                            <br />
                            @Html.TextAreaFor(model => model.vendorDocument.DocumentDescription, new { @rows = 3, @class = "form-control" + ViewBag.Disabled, maxlength = "500" })
                            @Html.ValidationMessageFor(model => model.vendorDocument.DocumentDescription, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-12 pull-right" style="text-align:right; padding-top:15px;">
                            @if (ViewBag.Disabled == "")
                            {
                                <input type="submit" name="SubmitAction" value="Save" class="btn btn-xs btn-info" />
                            }
                            &nbsp;
                            <span class="btn btn-xs btn-info" onclick="window.location.href='@Url.Action("Documents","Vendor", new {VendorID = @Model.vendorDocument.CustID, DocumentID = 0, PageLayout = @ViewBag.PageLayout})'">Cancel</span>
                        </div>
                    </div>
                }
            </div>
            <table class="table table-hover table-striped table-responsive" id="documentsTable">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.VendorDocumentList[0].DocumentName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.VendorDocumentList[0].DocumentDescription)
                        </th>
                        <th>
                            File Name / Template ID
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.VendorDocumentList[0].Status)
                        </th>
                        <th>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.VendorDocumentList)
                    {
                        <tr>
                            <td>
                                <a href="#" onclick="window.location.href = '@Url.Action("Documents", "Vendor", new { VendorID = @item.CustID, DocumentID = @item.DocumentID, PageLayout = @ViewBag.PageLayout }, @Constants.secureProtocol)'">@Html.DisplayFor(modelItem => item.DocumentName)</a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DocumentDescription)
                            </td>
                            <td>
                                @if (String.IsNullOrEmpty(item.TemplateID))
                                {
                                    @Html.DisplayFor(modelItem => item.FileName)
                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => item.TemplateID)
                                }
                            </td>
                            <td>
                                <span class="status-@item.Status.ToUpper()">@Html.DisplayFor(modelItem => item.Status)</span>
                            </td>
                            <td>
                                @if (ViewBag.Disabled == "")
                                {
                                    <span onclick="deleteDocument(@item.CustID, @item.DocumentID, '@item.DocumentName')" class="btn btn-xs btn-danger">
                                        X
                                    </span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @if (ViewBag.NextAction != "")
        {
            <div class="pull-right"><a class="btn btn-info" href="@Url.Action(ViewBag.NextAction, "Vendor", new { VendorID = @Model.vendorDocument.CustID })">Continue</a></div>
        }
    </div>
        <!-- DELETE PROGRAM INITIALIZATION FORM -->
    <div id="deleteDocumentFormDiv" style="display:block;">
        @using (Html.BeginForm("Documents", "Vendor", FormMethod.Get, new { @Id = "deleteDocumentForm" }))
        {
            @Html.AntiForgeryToken()

            <input type="hidden" name="ActionType" value="D" />
            <input type="hidden" name="VendorID" id="deleteVendorID" value="" />
            <input type="hidden" name="DocumentID" id="deleteDocumentID" value="" />
            <input type="hidden" name="pageLayout" value="@ViewBag.PageLayout" />
        }
    </div>

        <!-- Modal -->
    <div class="modal fade" id="deleteDocumentModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Delete Confirmation</h4>
                </div>
                <div class="modal-body">
                    <h4>
                        Are you sure you want to Delete <span id="deleteDocumentName"></span>?
                    </h4>
                    <br />
                    <p>
                        Deleting the Document can not be undone without contacting technical support.
                    </p>
                </div>
                <div class="modal-footer">

                    <div class="btn btn-info pull-left" data-dismiss="modal">Cancel without Deleting</div>
                    <div class="btn btn-danger pull-right" onclick="deleteDocumentConfirm()">Yes. Delete this Document</div>
                </div><!-- /.modal-footer-->
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <script>

        $(document).ready(function () {
            initializeDocumentsTable();
            $.validator.unobtrusive.parse(updateDocumentForm);
            if ($('#vendorDocument_DocumentID').val() > 0) {
                if ($('#vendorDocument_TemplateID').val() != "" && $('#vendorDocument_TemplateID').val() != null)
                {
                    $('#updateDocuSignFormDiv').show();
                }
                else
                {
                    $('#updateDocumentFormDiv').show();
                }
            }

            $('.disabled').attr("disabled", "disabled");
        });

        function initializeDocumentsTable() {
            $('#documentsTable').dataTable(
            {
                "searching": false,
                "bLengthChange": false,
                "oLanguage": {
                    "sInfo": "Showing rows _START_ to _END_ of _TOTAL_",
                    "sLengthMenu": "Show _MENU_ rows per page",
                    "sInfoEmpty": "0 records found",
                    "sEmptyTable": "No documents available to display"
                }
            });
        };

        function showAddDocumentForm() {
            $('#addDocumentButton').hide();
            $('#addDocuSignButton').show();
            $('#updateDocuSignFormDiv').hide();
            $('#updateDocumentFormDiv').show();
        };
        function showAddDocuSignForm() {
            $('#addDocuSignButton').hide();
            $('#addDocumentButton').show();
            $('#updateDocumentFormDiv').hide();
            $('#updateDocuSignFormDiv').show();
        };
        function deleteDocument(thisVendorID, thisDocumentID, thisDocumentDisplayName) {
            $("#deleteVendorID").val(thisVendorID);
            $("#deleteDocumentID").val(thisDocumentID);
            $('#deleteDocumentModal').modal('show');
            $("#deleteDocumentName").html(thisDocumentDisplayName);

        };
        function deleteDocumentConfirm() {
            $("#deleteDocumentForm").submit();
            $('#deleteDocumentModal').modal('hide');
        };
    </script>
}
