@model AppTrack.ViewModels.CustomerNoteUpdateViewModel
@{
  string customerNoteEditDiv = "customerNoteEditDiv" + @Model.SearchActivityID;
  string customerNotesListDiv = "customerNotesListDiv" + @Model.SearchActivityID;
  string editNoteListForm = "editNoteListForm" + @Model.SearchActivityID;

}

<div id="@customerNoteEditDiv" class="row" style="padding-top:10px;">
    <div class="panel panel-default">
        <div class="panel-body">

            <div class="col-sm-6">
                <h4>Edit</h4>
            </div>

            <div class="col-sm-6" style="text-align:right;">
                @using (Ajax.BeginForm("NotesList", "CustomerNotes", null,
                new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "POST",
                    OnFailure = "NotesListFailed",
                    UpdateTargetId = customerNotesListDiv
                }, new { id = editNoteListForm }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.SearchActivityID)
                    @Html.HiddenFor(model => model.SearchCustID)
                    @Html.HiddenFor(model => model.SearchAssignedToID)
                    @Html.HiddenFor(model => model.SearchStartDate)
                    @Html.HiddenFor(model => model.SearchEndDate)
                    @Html.HiddenFor(model => model.SearchScheduledStartDate)
                    @Html.HiddenFor(model => model.SearchScheduledEndDate)
                    @Html.HiddenFor(model => model.SearchCompletedStartDate)
                    @Html.HiddenFor(model => model.SearchCompletedEndDate)
                    @Html.HiddenFor(model => model.SearchPhrase)
                    @Html.HiddenFor(model => model.SearchNoteType)
                    @Html.HiddenFor(model => model.SearchCommType)
                    @Html.HiddenFor(model => model.SearchCommDirection)
                }
            </div>

            <div style="clear:both;height:1px;"></div>
            <div class="col-xs-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>

            <div class="filterbar" id="editNoteFormDiv" style="display:block;">
                @using (Ajax.BeginForm("EditNote", "CustomerNotes", null,
                new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "POST",
                    OnFailure = "editNoteFailed",
                    OnSuccess = "editNoteSuccess",
                    LoadingElementId = "ajax-loader",
                    UpdateTargetId = customerNoteEditDiv
                }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.NoteID)
                    @Html.HiddenFor(model => model.CustID)
                    @Html.HiddenFor(model => model.OwnerID)
                    @Html.HiddenFor(model => model.ActivityID)
                    @Html.HiddenFor(model => model.NoteType)
                    @Html.HiddenFor(model => model.SearchActivityID)
                    @Html.HiddenFor(model => model.SearchCustID)
                    @Html.HiddenFor(model => model.SearchAssignedToID)
                    @Html.HiddenFor(model => model.SearchStartDate)
                    @Html.HiddenFor(model => model.SearchEndDate)
                    @Html.HiddenFor(model => model.SearchScheduledStartDate)
                    @Html.HiddenFor(model => model.SearchScheduledEndDate)
                    @Html.HiddenFor(model => model.SearchCompletedStartDate)
                    @Html.HiddenFor(model => model.SearchCompletedEndDate)
                    @Html.HiddenFor(model => model.SearchPhrase)
                    @Html.HiddenFor(model => model.SearchNoteType)
                    @Html.HiddenFor(model => model.SearchCommType)
                    @Html.HiddenFor(model => model.SearchCommDirection)

                    <div class="col-sm-3">
                        <label class="control-label">Communication Type</label>
                        <br />
                        @Html.DropDownListFor(model => model.CommType, Model.EditCommTypeList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CommType, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        <label class="control-label">Direction</label>
                        <br />
                        @Html.DropDownListFor(model => model.CommDirection, Model.EditCommDirectionList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CommType, "", new { @class = "text-danger" })
                    </div>

                    if (Model.NoteType == "Task")
                    {
                        <div class="col-sm-3">
                            <label class="control-label">Assigned To</label>
                            <br />
                            @Html.DropDownListFor(model => model.AssignedTo, Model.EditAssignedToList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NoteText, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            <label class="control-label">Due Date</label>
                            <br />
                            @Html.JQueryUI().DatepickerFor(model => model.ScheduledDate, new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.SearchEndDate, new { htmlAttributes = new { @class = "form-control date-picker" } })*@
                            @Html.ValidationMessageFor(model => model.ScheduledDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            <label class="control-label">Status</label>
                            <br />
                            @Html.DropDownListFor(model => model.Status, Model.EditNoteStatusList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            <label class="control-label">Completed Date</label>
                            <br />
                            @Html.JQueryUI().DatepickerFor(model => model.EndDate, new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.SearchStartDate, new { htmlAttributes = new { @class = "form-control date-picker" } })*@
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    }
                    else
                    {
                        @Html.HiddenFor(model => model.AssignedTo)

                    }
                    <div class="col-sm-12">
                        <label class="control-label">Description</label>
                        <br />
                        @Html.TextAreaFor(model => model.NoteText, new { @rows = 8, @width = "100%", @class = "form-control" })
                        @*Html.EditorFor(model => model.NoteText, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.NoteText, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4 pull-right" style="text-align:right;">
                        <label class="control-label">&nbsp;</label>
                        <br />
                        <button class="btn btn-sm btn-info" type="submit" value="Add">Update</button>&nbsp;&nbsp;&nbsp;<span class="btn btn-sm btn-danger" onclick="hideEditForm(@Model.SearchActivityID)">Cancel</span>
                    </div>
                    <img id="ajax-loader" src="@Url.Content("~/Content/images/ajaxLoader.gif")" style="display:none;" />
                }
                <div style="clear:both;height:20px;"></div>
            </div>
        </div>
    </div>
</div>
            

<script>
    $(document).ready(function () {
        var isSuccess = "@ViewBag.Success";
        if (isSuccess == "Y") {
            $("#editNoteListForm"+@Model.SearchActivityID).submit();
        }
        $("#ScheduledDate").datepicker();
        $("#EndDate").datepicker();
    });
    function editNoteSuccess() {

    }
    function editNoteFailed() {
        alert("Error encountered, unable to edit note.");
    }
    function hideEditForm(thisActivityID) {
        $("#customerNoteEditDiv"+thisActivityID).hide();
    }

</script>