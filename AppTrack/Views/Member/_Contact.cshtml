<div id="contactContainerDiv">
    @if (ViewBag.ErrorCode == Constants.fatalErrorCode)
    {
        <div class="col-md-12" style="font-size: 1.5em">
            <br />
            <br />
            The following unexpected error was encountered:
            <br />
            <br />
            <span class=" text-danger">@ViewBag.ErrorMessage</span>
            <br />
            <br />
            Please contact technical support.
        </div>
    }
    else
    {
        @model AppTrack.ViewModels.MemberContactViewModel
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="panel-title">
                Edit the Contact Information Below
            </div>
        </div>
        <div class="panel-body nopassing">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (ViewBag.ErrorMessage != "")
            {
                <span class="text-success">@ViewBag.ErrorMessage</span>
            }
            @using (Ajax.BeginForm("ContactEdit", "Member", null,
                    new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "POST",
                        OnFailure = "updateContactFailure",
                        OnSuccess = "updateContactSuccess()",
                        LoadingElementId = "ajax-loader",
                        UpdateTargetId = "ContactsTab"
                    }, new { id = "updateContactForm" }))
            {
                @Html.AntiForgeryToken()

                <input type="hidden" name="ErrorCode" id="ErrorCode" value="@ViewBag.ErrorCode" />
                @Html.HiddenFor(model => model.contactRecord.CustID)
                @Html.HiddenFor(model => model.contactRecord.SponsorID)
                @Html.HiddenFor(model => model.contactRecord.Company)
                @Html.HiddenFor(model => model.contactRecord.Fax)
    <img id="ajax-loader" src="@Url.Content("~/Images/ajax-loader.gif")" style="display:none;" />

                <div class="col-md-6">
                    <div class="col-sm-3">
                        @Html.LabelFor(model => model.contactRecord.NameTitle, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.DropDownListFor(model => model.contactRecord.NameTitle, Model.NameTitleList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.contactRecord.NameTitle, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.contactRecord.FirstName, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.FirstName, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.FirstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-5">
                        @Html.LabelFor(model => model.contactRecord.LastName, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.LastName, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.LastName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.contactRecord.Email, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.Email, new { htmlAttributes = new { @class = "form-control email", maxlength = "100" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.contactRecord.DayPhone, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.DayPhone, new { htmlAttributes = new { @class = "form-control phone", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.DayPhone, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.contactRecord.Mobile, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.Mobile, new { htmlAttributes = new { @class = "form-control phone", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.Mobile, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4">
                        <label class="control-label">Contact Type</label>
                        <br />
                        @Html.DropDownListFor(model => model.contactRecord.VariantData1, Model.ContactTypeList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.contactRecord.VariantData1, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.contactRecord.VariantData2, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.VariantData2, new { htmlAttributes = new { @class = "form-control phone", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.VariantData2, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.contactRecord.VariantData3, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.VariantData3, new { htmlAttributes = new { @class = "form-control phone", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.VariantData3, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="col-sm-12">
                        @Html.LabelFor(model => model.contactRecord.Address1, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.Address1, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.Address1, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-12">
                        @Html.LabelFor(model => model.contactRecord.Address2, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.Address2, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.Address2, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.contactRecord.City, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.City, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.City, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        @Html.LabelFor(model => model.contactRecord.State, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.DropDownListFor(model => model.contactRecord.State, Model.StateList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.contactRecord.State, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3">
                        @Html.LabelFor(model => model.contactRecord.PostalCode, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.contactRecord.PostalCode, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                        @Html.ValidationMessageFor(model => model.contactRecord.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12 pull-right" style="text-align:right;padding-top:25px;">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            }
        </div>
        <div class="panel-footer" id="result">
<!--  Click Here to Delete This Contact-->            
        </div>
    </div>

    <!-- DELETE CONTACT INITIALIZATION FORM -->
        <div id="deleteContactFormDiv" style="display:block;">
            @using (Ajax.BeginForm("Delete", "Member",
    new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "GET",
        OnFailure = "deleteContactFailure",
        OnSuccess = "deleteContactSuccess",
        LoadingElementId = "ajax-loader",
        UpdateTargetId = "contactContainerDiv"
    }, new { id = "deleteContactForm" }
    ))
            {
                <input type="hidden" name="CustID" id="deleteCustID" value="@Model.contactRecord.CustID" />
            }
        </div>

        <!-- Modal -->
        <div class="modal fade" id="deleteContactModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Delete Confirmation</h4>
                    </div>
                    <div class="modal-body">
                        <h4>
                            Are you sure you want to Delete @Model.contactRecord.FirstName @Model.contactRecord.LastName ?
                        </h4>
                        <br />
                        <p>
                            Deleting the Contact cannot be undone without contacting technical support.
                        </p>
                    </div>
                    <div class="modal-footer">

                        <div class="btn btn-info pull-left" data-dismiss="modal">Cancel without Deleting</div>
                        <div class="btn btn-danger pull-right" onclick="deleteContactConfirm()">Yes. Delete this Member</div>
                    </div><!-- /.modal-footer-->
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div><!-- /.modal -->


        <script>

            $(document).ready(function () {
                $.validator.unobtrusive.parse(updateContactForm);
            });

            function updateContactSuccess() {
            }

            function updateContactFailure() {
                alert("Update Contact failed");
            }

            function deleteContact() {
                $('#deleteContactModal').modal('show');

            };
            function deleteContactConfirm() {
                $("#deleteContactForm").submit();
                $('#deleteContactModal').modal('hide');
            };

            function deleteContactSuccess() {
            }

            function deleteContactFailure() {
                alert("Delete Contact failed");
            }

            $(document).ready(function () {
                $("#contactRecord_DayPhone").mask("(999)999‐9999?x9999");
                $("#contactRecord_Mobile").mask("(999)999‐9999");
            });

        </script>
    }

</div>


