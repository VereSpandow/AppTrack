@{
    ViewBag.Title = "IMDMeetings";
    Layout = "~/Views/Shared/_SiteLayout.cshtml";
    ViewBag.PageType = "Meetings";
}
<div class="row nopadding">
    <div class="container nopadding" style="margin-top:0px;">
        <div class="col-md-4  pull-left" style="min-height:450px;">
            @{Html.RenderPartial("/Views/Shared/_LeftSideBarIMD.cshtml");}
        </div>
        <div class="col-md-8 pull-right no-offset nopadding">
            <div class="col-md-12 nopadding">
                @if (ViewBag.ErrorCode == Constants.fatalErrorCode)
                {
                    <div id="meetingContainerDiv">
                        <div class="col-sm-12" style="font-size: 1.5em">
                            <br />
                            <br />
                            The following unexpected error was encountered:
                            <br />
                            <br />
                            <span class=" text-danger">@ViewBag.ErrorMessage</span>
                            <br />
                            <br />
                            Please contact us so we can resolve this issue.
                        </div>
                    </div>
                }
                else
                {
                    @model AppTrack.ViewModels.MeetingViewModel

                    <div id="meetingContainerDiv">
                        <div class="col-sm-6 nopadding">
                            <h3>Meetings</h3>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-sm-6 nopadding pull-right" style="text-align:right;padding-top:15px;">
                            <button class="btn btn-xs btn-info" onclick="showUpdateMeetingForm()" id="addMeetingButton">
                                Add Meeting
                            </button>
                            <button class="btn btn-xs btn-info" onclick="showSearchMeetingForm()">
                                Search Meetings
                            </button>
                        </div>

                        <div style="clear:both"></div>

                        <div class="nopadding" style="padding-top:10px;">

                            <div class="filterbar" id="updateMeetingFormDiv" style="display:none;">
                                @using (Html.BeginForm("MeetingUpdate", "SiteIMD", FormMethod.Post, new { id = "formProfileList" }))
                                {
                                    @Html.AntiForgeryToken()


                                    <div class="col-sm-7" style="padding:0">

                                        <div class="col-sm-4">
                                            @Html.LabelFor(model => model.meetingEvent.EventStartDate, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.JQueryUI().DatepickerFor(model => model.meetingEvent.EventStartDate, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.EventStartDate, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-8">
                                            @Html.LabelFor(model => model.eventStartHour, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            <div class="pull-left">@Html.DropDownListFor(model => model.eventStartHour, Model.TimeHourList, new { @class = "form-control" })</div>
                                            <div class="pull-left" style="padding-left:5px;">@Html.DropDownListFor(model => model.eventStartMinute, Model.TimeMinuteList, new { @class = "form-control" })</div>
                                            <div class="pull-left" style="padding-left:5px;">@Html.DropDownListFor(model => model.eventStartAMPM, Model.TimeAMPMList, new { @class = "form-control" })</div>
                                            <div style="clear:left">@Html.ValidationMessageFor(model => model.eventStartHour, "", new { @class = "text-danger" })</div>
                                        </div>

                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.meetingEvent.LocationTitle, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(model => model.meetingEvent.LocationTitle, new { htmlAttributes = new { @class = "form-control", maxlength = "100" } })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.LocationTitle, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.meetingEvent.Address1, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(model => model.meetingEvent.Address1, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.Address1, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.meetingEvent.Address2, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(model => model.meetingEvent.Address2, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.Address2, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-4">
                                            @Html.LabelFor(model => model.meetingEvent.City, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(model => model.meetingEvent.City, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.City, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-4">
                                            @Html.LabelFor(model => model.meetingEvent.State, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.DropDownListFor(model => model.meetingEvent.State, Model.StateList, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.State, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-4">
                                            @Html.LabelFor(model => model.meetingEvent.PostalCode, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(model => model.meetingEvent.PostalCode, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.PostalCode, "", new { @class = "text-danger" })
                                        </div>

                                        @Html.HiddenFor(model => model.meetingEvent.Status)
                                    </div>
                                    <div class="col-sm-5" style="padding:0">
                                        <input type="hidden" name="ErrorCode" id="ErrorCode" value="@ViewBag.ErrorCode" />
                                        <input type="hidden" name="CustID" id="CustID" value="@ViewBag.CustID" />

                                        @Html.HiddenFor(model => model.meetingEvent.CategoryID)
                                        @Html.HiddenFor(model => model.meetingEvent.ID)

                                        <div class="col-sm-12">
                                            <label for="EventTitle" class="control-label">Topic</label>
                                            <br />
                                            @Html.EditorFor(model => model.meetingEvent.EventTitle, new { htmlAttributes = new { @class = "form-control", maxlength = "100" } })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.EventTitle, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.meetingEvent.SponsorName, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(model => model.meetingEvent.SponsorName, new { htmlAttributes = new { @class = "form-control", maxlength = "100" } })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.SponsorName, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.meetingEvent.EventDescription, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.TextAreaFor(model => model.meetingEvent.EventDescription, new { @rows = 5, @class = "form-control", maxlength = "2500" })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.EventDescription, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-6">
                                            @Html.LabelFor(model => model.meetingEvent.Capacity, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(model => model.meetingEvent.Capacity, new { htmlAttributes = new { @class = "form-control", maxlength = "100" } })
                                            @Html.ValidationMessageFor(model => model.meetingEvent.Capacity, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-6 pull-right" style="text-align:right; margin-bottom:20px;">
                                            <label class="control-label">&nbsp;</label>
                                            <br />
                                            <input type="submit" name="SubmitAction" value="Save" class="btn btn-sm btn-info" />
                                            &nbsp;
                                            <span class="btn btn-sm btn-danger" onclick="hideUpdateMeetingForm()">Cancel</span>
                                        </div>

                                    </div>
                                    <div style="width:100%;text-align: center">
                                        <img id="ajax-loader" src="@Url.Content("~/Content/images/ajaxLoader.gif")" style="display:none;" />
                                    </div>
                                }
                            </div>
                            <!-- SEARCH FORM -->
                            <div class="filterbar" id="searchMeetingFormDiv" style="display:none;">
                                @using (Html.BeginForm("MeetingList", "SiteIMD", FormMethod.Post, new { id = "formMeetingList" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="CustID" value="@ViewBag.CustID" />
                                    <input type="hidden" name="SearchState" value=" " />
                                    <div>
                                        <div class="col-sm-2">
                                            <label class="control-label">Dates From</label>
                                            <br />
                                            @Html.JQueryUI().DatepickerFor(model => model.SearchStartDate, new { @class = "form-control" })
                                            @*@Html.EditorFor(model => model.SearchStartDate, new { htmlAttributes = new { @class = "form-control date-picker" } })*@
                                            @Html.ValidationMessageFor(model => model.SearchStartDate, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-2">
                                            <label class="control-label">To</label>
                                            <br />
                                            @Html.JQueryUI().DatepickerFor(model => model.SearchEndDate, new { @class = "form-control" })
                                            @*@Html.EditorFor(model => model.SearchEndDate, new { htmlAttributes = new { @class = "form-control date-picker" } })*@
                                            @Html.ValidationMessageFor(model => model.SearchEndDate, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-4">
                                            @Html.LabelFor(model => model.SearchPhrase, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.EditorFor(model => model.SearchPhrase, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SearchPhrase, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-2">
                                            @Html.LabelFor(model => model.SearchStatus, htmlAttributes: new { @class = "control-label" })
                                            <br />
                                            @Html.DropDownListFor(model => model.SearchStatus, Model.SearchStatusList, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SearchStatus, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-2 pull-right" style="text-align:right;">
                                            <label class="control-label">&nbsp;</label>
                                            <br />
                                            <button class="btn btn-sm btn-info" type="submit" value="Search">Search</button>
                                        </div>
                                    </div>
                                    <div style="text-align: center">
                                        <img id="ajax-loader" src="@Url.Content("~/Content/images/ajaxLoader.gif")" style="display:none;" />
                                    </div>
                                }
                            </div>
                        </div>
                        <table class="table table-hover table-striped table-responsive" id="meetingsTable" style="padding-top:10px;">
                            <thead>
                                <tr>
                                    <th>
                                        Date / Time
                                    </th>
                                    <th>
                                        Sponsor / Topic
                                    </th>
                                    <th>
                                        Location
                                    </th>
                                    <th class="hidden-sm hidden-xs">
                                        Status
                                    </th>
                                    <th class="hidden-sm hidden-xs">
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.MeetingEventList)
                                {
                                    <tr>
                                        <td>
                                            @item.EventStartDate.ToString("MM/dd/yy hh:mm tt")
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.SponsorName)
                                            <br />
                                            @Html.DisplayFor(modelItem => item.EventTitle)
                                        </td>
                                        <td>
                                            @if (!String.IsNullOrEmpty(item.LocationTitle))
                                            {
                                                @item.LocationTitle
                                                <br />
                                            }
                                            @item.Address1
                                            @if (!String.IsNullOrEmpty(item.Address2))
                                            {
                                                <span>,</span> @item.Address2
                                            }
                                            <br />
                                            @item.City<span>,</span> @item.State @item.PostalCode


                                        </td>

                                        <td class="hidden-sm hidden-xs">
                                            <span class="status-@item.Status.ToUpper()">@Html.DisplayFor(modelItem => item.Status)</span>
                                        </td>
                                        <td style="text-align:center;" class="hidden-sm hidden-xs">
                                            <a href="@Url.Action("RegistrationList", "SiteIMD", new { EventID = item.ID })"><span class="fa fa-2x fa-users"></span></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- EDIT CONTACT INITIALIZATION FORM -->
                    <div id="editMeetingInitFormDiv" style="display:block;">
                        @using (Ajax.BeginForm("MeetingList", "Meeting", null,
                            new AjaxOptions
                            {
                                InsertionMode = InsertionMode.Replace,
                                HttpMethod = "GET",
                                OnFailure = "editMeetingInitFailure",
                                OnSuccess = "editMeetingInitSuccess",
                                LoadingElementId = "ajax-loader",
                                UpdateTargetId = "meetingContainerDiv"
                            }, new { id = "editMeetingInitForm" }))
                        {
                            <input type="hidden" name="CustID" id="editCustID" value="" />
                            <input type="hidden" name="EventID" id="editEventID" value="" />
                        }
                    </div>
                    <!-- DELETE Meeting INITIALIZATION FORM -->
                    <div id="deleteMeetingFormDiv" style="display:block;">
                        @using (Ajax.BeginForm("MeetingList", "Meeting", new { ActionType = "D" },
                            new AjaxOptions
                            {
                                InsertionMode = InsertionMode.Replace,
                                HttpMethod = "GET",
                                OnFailure = "deleteMeetingFailure",
                                OnSuccess = "deleteMeetingSuccess",
                                LoadingElementId = "ajax-loader",
                                UpdateTargetId = "meetingContainerDiv"
                            }, new { id = "deleteMeetingForm" }))
                        {
                            <input type="hidden" name="CustID" id="deleteCustID" value="" />
                            <input type="hidden" name="EventID" id="deleteEventID" value="" />
                        }
                    </div>

                    <!-- Modal -->
                    <div class="modal fade" id="deleteMeetingModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    <h4 class="modal-title">Cancel Confirmation</h4>
                                </div>
                                <div class="modal-body">
                                    <h4>
                                        Are you sure you want to Cancel the meeting: <span id="deleteMeetingName"></span>?
                                    </h4>
                                    <br />
                                    <p>
                                        Cancelling the Meeting can not be undone without contacting technical support.
                                    </p>
                                </div>
                                <div class="modal-footer">

                                    <div class="btn btn-info pull-left" data-dismiss="modal">No, do not Cancel</div>
                                    <div class="btn btn-danger pull-right" onclick="deleteMeetingConfirm()">Yes, Cancel this Meeting</div>
                                </div><!-- /.modal-footer-->
                            </div><!-- /.modal-content -->
                        </div><!-- /.modal-dialog -->
                    </div><!-- /.modal -->

                    <script>

                        $(document).ready(function () {
                            initializeMeetingsTable();
                            $.validator.unobtrusive.parse(document);
                            $("#meetingEvent_EventStartDate").datepicker();
                            $("#SearchStartDate").datepicker();
                            $("#SearchEndDate").datepicker();
                        });

                        function initializeMeetingsTable() {
                            $('#meetingsTable').dataTable(
                            {
                                "searching": false,
                                "bLengthChange": false,
                                "oLanguage": {
                                    "sInfo": "Showing rows _START_ to _END_ of _TOTAL_",
                                    "sLengthMenu": "Show _MENU_ rows per page",
                                    "sInfoEmpty": "0 records found",
                                    "sEmptyTable": "No meetings available to display"
                                }
                            });
                        };

                        function showUpdateMeetingForm() {
                            $('#addMeetingButton').hide();
                            $('#searchMeetingFormDiv').hide();
                            $('#updateMeetingFormDiv').show();
                        };

                        function hideUpdateMeetingForm() {
                            $('#addMeetingButton').show();
                            $('#updateMeetingFormDiv').hide();
                        };

                        function showSearchMeetingForm() {
                            $('#addMeetingButton').show();
                            $('#updateMeetingFormDiv').hide();
                            $('#searchMeetingFormDiv').show();
                        }


                    </script>
                }

            </div>
        </div>
    </div>
</div>



