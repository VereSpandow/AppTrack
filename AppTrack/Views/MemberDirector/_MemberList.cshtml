@if (ViewBag.ErrorCode == Constants.fatalErrorCode)
{
    <div id="memberContainerDiv">
        <div class="col-sm-12" style="font-size: 1.5em">
            <br />
            <br />
            The following unexpected error was encountered:
            <br />
            <br />
            <span class=" text-danger">@ViewBag.ErrorMessage</span>
            <br />
            <br />
            Please contact technical support.
        </div>
    </div>
}
else
{
    @model AppTrack.ViewModels.MemberDirectorMemberListViewModel

    <div id="memberContainerDiv">
        <div class="col-sm-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>

        <div class="col-sm-6 pull-right" style="text-align:right;">
            <button class="btn btn-xs btn-info" onclick="showSearchMemberForm()">
                Search Members
            </button>
        </div>

        <div style="clear:both"></div>

        <div class="row" style="padding-top:10px;">

            <!-- SEARCH FORM -->
            <div class="filterbar" id="searchMemberFormDiv" style="display:none;">
                @using (Ajax.BeginForm("MemberList", "MemberDirector", null,
                new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "POST",
                    OnFailure = "memberListFailed",
                    LoadingElementId = "ajax-loader",
                    UpdateTargetId = "memberContainerDiv"
                }, new { id = "searchMemberForm" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="CustID" value="@Model.CustID" />
                    <div>
                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.SearchLastName, htmlAttributes: new { @class = "control-label" })
                            <br />
                            @Html.EditorFor(model => model.SearchLastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SearchLastName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            @Html.LabelFor(model => model.SelectedStatus, htmlAttributes: new { @class = "control-label" })
                            <br />
                            @Html.DropDownListFor(model => model.SelectedStatus, Model.StatusList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SelectedStatus, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-5 pull-right" style="text-align:right;">
                            <label class="control-label">&nbsp;</label>
                            <br />
                            <button class="btn btn-sm btn-info" type="submit" value="Search">Search</button>
                        </div>
                    </div>
                    <div style="text-align: center">
                        <img id="ajax-loader" src="@Url.Content("~/Content/images/ajaxLoader.gif")" style="display:none;" />
                    </div>
                }
            </div>
        </div>
        <table class="table table-hover table-striped table-responsive" id="memberTable" style="padding-top:10px;">
            <thead>
                <tr>
                    <th>
                        Member ID
                    </th>
                    <th>
                        Enrolled
                    </th>
                    <th>
                        Member Name
                    </th>
                    <th>
                        Address
                    </th>
                    <th>
                        Status
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.MemberList)
                {
                    <tr>
                        <td>
                            @item.CustID
                        </td>
                        <td>
                            @item.StartDate.Value.ToString("MM/dd/yy hh:mm tt")
                        </td>
                        <td>
                            @item.DisplayName
                        </td>
                        <td>
                            @item.Address1
                            @if (item.Address2 != "")
                            {
                                <span>,</span> @item.Address2
                            }
                            <br />
                            @item.City<span>,</span> @item.State @item.PostalCode
                        </td>
                        <td>
                            <span class="status-@item.Status.ToUpper()">@Html.DisplayFor(modelItem => item.Status)</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <script>

        $(document).ready(function () {
            initializeMemberTable();
            $.validator.unobtrusive.parse(document);
        });

        function initializeMemberTable() {
            $('#memberTable').dataTable(
            {
                "searching": false,
                "bLengthChange": false,
                "oLanguage": {
                    "sInfo": "Showing rows _START_ to _END_ of _TOTAL_",
                    "sLengthMenu": "Show _MENU_ rows per page",
                    "sInfoEmpty": "0 records found",
                    "sEmptyTable": "No meetings available to display"
                }
            });
        };

        function showSearchMemberForm() {
            $('#addMemberButton').show();
            $('#updateMemberFormDiv').hide();
            $('#searchMemberFormDiv').show();
        }

        function memberListFailed() {
            alert("Search members failed");
        }

    </script>
}
