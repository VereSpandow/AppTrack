@if (ViewBag.ErrorCode == Constants.fatalErrorCode)
{
    <div id="contactContainerDiv">
        <div class="col-md-12" style="font-size: 1.5em">
            <br />
            <br />
            The following unexpected error was encountered:
            <br />
            <br />
            <span class=" text-danger">@ViewBag.ErrorMessage</span>
            <br />
            <br />
            Please contact technical support.
        </div>
    </div>
}
else
{
    @model AppTrack.ViewModels.MemberDirectorViewModel

    <div id="contactContainerDiv">

        <div class="row">

            <div class="filterbar" id="updateContactFormDiv">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (ViewBag.ErrorMessage != "")
                {
                    <span class="text-success">@ViewBag.ErrorMessage</span>
                }
                @using (Ajax.BeginForm("Edit", "MemberDirector", null,
                new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "POST",
                    OnFailure = "updateContactFailure",
                    OnSuccess = "updateContactSuccess()",
                    LoadingElementId = "ajax-loader",
                    UpdateTargetId = "contactContainerDiv"
                }, new { id = "updateContactForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div>
                        <input type="hidden" name="ErrorCode" id="ErrorCode" value="@ViewBag.ErrorCode" />

                        @Html.HiddenFor(model => model.CustID)

                        <div class="col-md-6">
                            <div class="col-sm-12">
                                @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-12">
                                @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-12">
                                @Html.LabelFor(model => model.TaxID, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.TaxID, new { htmlAttributes = new { @class = "form-control", maxlength = "11" } })
                                @Html.ValidationMessageFor(model => model.TaxID, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-12">
                                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-12">
                                @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-6">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.DropDownListFor(model => model.State, Model.StateList, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", maxlength = "5" } })
                                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-6">
                                @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control phone", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-6">
                                @Html.LabelFor(model => model.AccountingID, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.AccountingID, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.AccountingID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="col-sm-3">
                                @Html.LabelFor(model => model.NameTitle, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.DropDownListFor(model => model.NameTitle, Model.NameTitleList, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NameTitle, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-5">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control email", maxlength = "100" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-6">
                                @Html.LabelFor(model => model.DayPhone, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.DayPhone, new { htmlAttributes = new { @class = "form-control phone", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.DayPhone, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-6">
                                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control phone", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-12 pull-right" style="text-align:right;padding-top:25px;">
                                <input type="submit" value="Save" class="btn btn-info" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- DELETE CONTACT INITIALIZATION FORM -->
    <div id="deleteContactFormDiv" style="display:block;">
        @using (Ajax.BeginForm("Delete", "MemberDirector",
             new AjaxOptions
             {
                 InsertionMode = InsertionMode.Replace,
                 HttpMethod = "GET",
                 OnFailure = "deleteContactFailure",
                 OnSuccess = "deleteContactSuccess",
                 LoadingElementId = "ajax-loader",
                 UpdateTargetId = "contactContainerDiv"
             }, new { id = "deleteContactForm" }
             ))
        {
            <input type="hidden" name="CustID" id="deleteCustID" value="@Model.CustID" />
        }
    </div>

    <!-- Modal -->
    <div class="modal fade" id="deleteContactModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Delete Confirmation</h4>
                </div>
                <div class="modal-body">
                    <h4>
                        Are you sure you want to Delete @Model.DisplayName ?
                    </h4>
                    <br />
                    <p>
                        Deleting the Member Director cannot be undone without contacting technical support.
                    </p>
                </div>
                <div class="modal-footer">

                    <div class="btn btn-info pull-left" data-dismiss="modal">Cancel without Deleting</div>
                    <div class="btn btn-danger pull-right" onclick="deleteContactConfirm()">Yes. Delete this Member Director</div>
                </div><!-- /.modal-footer-->
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->


    <script>

        $(document).ready(function () {
            $.validator.unobtrusive.parse(updateContactForm);
            $("#Mobile").mask("(999) 999-9999");
            $("#Fax").mask("(999) 999-9999");
            $("#DayPhone").mask("(999) 999-9999? x99999");
        });

        function updateContactSuccess() {
        }

        function updateContactFailure() {
            alert("Update Contact failed");
        }

        function deleteContact() {
            $('#deleteContactModal').modal('show');

        };
        function deleteContactConfirm() {
            $("#deleteContactForm").submit();
            $('#deleteContactModal').modal('hide');
        };

        function deleteContactSuccess() {
        }

        function deleteContactFailure() {
            alert("Delete Contact failed");
        }

    </script>

}


