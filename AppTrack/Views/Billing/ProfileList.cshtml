@if (ViewBag.ErrorCode == Constants.fatalErrorCode)
{
    <div id="contactContainerDiv">
        <div class="col-sm-12" style="font-size: 1.5em">
            <br />
            <br />
            The following unexpected error was encountered:
            <br />
            <br />
            <span class=" text-danger">@ViewBag.ErrorMessage</span>
            <br />
            <br />
            Please contact technical support.
        </div>
    </div>
}
else
{
    @model AppTrack.ViewModels.AutoShipHeaderListViewModel

    <div id="profileContainerDiv">
        <div class="h2" style="float:left">Billing Profile List</div>
        <div class="filterbar" style="display:block;clear:both;">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div id="updateProfileFormContainerDiv" style="display:none;">
            </div>

            <div id="searchFormDiv">
                @if (ViewBag.ShowConfirmation == "True")
                {
                    using (Html.BeginForm("GenerateOrders", "Billing", FormMethod.Post, new { id = "formGenerateOrders" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.SearchStartDate)
                        @Html.HiddenFor(model => model.SearchEndDate)
                        @Html.HiddenFor(model => model.SearchCustID)
                        @Html.HiddenFor(model => model.SearchStatus)

                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col-sm-12">
                                    Below are the Billing Profiles that will be used to generate orders. You may either continue
                                    to generate orders or cancel the order generation.
                                </div>
                                <br />
                                <div class="col-sm-6">
                                    <label class="control-label">&nbsp;</label>
                                    <br />
                                    <input class="btn btn-info" type="submit" name="submitAction" value="Generate Orders">
                                </div>
                                <div class="col-sm-6 pull-right" style="text-align:right;">
                                    <label class="control-label">&nbsp;</label>
                                    <br />
                                    <input class="btn btn-danger" type="submit" name="submitAction" value="Cancel Order Generation">
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    using (Html.BeginForm("ProfileList", "Billing", FormMethod.Post, new { id = "formProfileList" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div class="col-sm-2">
                                    @Html.LabelFor(model => model.SearchCustID, htmlAttributes: new { @class = "control-label" })
                                    <br />
                                    @Html.EditorFor(model => model.SearchCustID, new { htmlAttributes = new { @class = "form-control", maxlength = "50" } })
                                    @Html.ValidationMessageFor(model => model.SearchCustID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.LabelFor(model => model.SearchStatus, htmlAttributes: new { @class = "control-label" })
                                    <br />
                                    @Html.DropDownListFor(model => model.SearchStatus, Model.SearchStatusList, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SearchStatus, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4" style="padding:0;">
                                    <div class="col-sm-6">
                                        <label class="control-label">Next Bill From</label>
                                        <br />
                                        @Html.JQueryUI().DatepickerFor(model => model.SearchStartDate, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SearchStartDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-6">
                                        <label class="control-label">To</label>
                                        <br />
                                        @Html.JQueryUI().DatepickerFor(model => model.SearchEndDate, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SearchEndDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <label class="control-label">&nbsp;</label>
                                    <br />
                                    <input class="btn btn-info" type="submit" name="submitAction" value="Search">
                                </div>
                                @if ((Model.SearchStatus.ToUpper() == "OPEN" || Model.SearchStatus.ToUpper() == "ONHOLD") && Model.AutoShipHeaderList.Count() > 0)
                                {
                                    <div class="col-sm-2 pull-right">
                                        <label class="control-label">&nbsp;</label>
                                        <br />
                                        <input class="btn btn-warning" type="submit" name="submitAction" value="Generate Orders">
                                    </div>
                                }
                            </div>
                        </div>
                    }

                }
                <hr />
            </div>
        </div>

        <table class="table table-hover table-striped table-responsive" id="thisTable">
            <thead>
                <tr>
                    <th>
                        Bill To (ID) Name
                    </th>
                    <th>
                        Last Bill Date
                    </th>
                    <th>
                        Next Bill Date
                    </th>
                    <th>
                        Billing Amount
                    </th>
                    <th>
                        Profile Status
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.AutoShipHeaderList)
                {
                    <tr>
                        <td>
                            ( @Html.DisplayFor(modelItem => item.CustID) ) @Html.DisplayFor(modelItem => item.ShipName)
                        </td>
                        <td>
                            @(item.LastDate != null ? item.LastDate.Value.ToString("MM/dd/yy") : "n/a")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NextDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderTotal)
                        </td>
                        <td>
                            <span class="status-@item.Status.ToUpper()">@Html.DisplayFor(modelItem => item.Status)</span>
                        </td>
                        <td>
                            @if (item.Status.ToUpper() == "OPEN" || item.Status.ToUpper() == "ONHOLD")
                            {
                                <a href="#" onclick="getProfileUpdateForm(@item.AutoShipID)"><span class="fa fa-edit"></span></a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @section Scripts {
        <script>
            $(document).ready(function () {
                $.validator.unobtrusive.parse(document);
                $("#SearchStartDate").datepicker();
                $("#SearchEndDate").datepicker();
                $('#thisTable').dataTable(
                {
                    "searching": false,
                    "bLengthChange": true,
                    "iDisplayLength":100,
                    "oLanguage": {
                        "sInfo": "Showing rows _START_ to _END_ of _TOTAL_",
                        "sLengthMenu": "Show _MENU_ rows per page",
                        "sInfoEmpty": "0 records found",
                        "sEmptyTable": "No information available to display"
                    }
                });
            });

            function getProfileUpdateForm(AutoShipID) {
                $("#updateProfileFormContainerDiv").show();
                $("#searchFormDiv").hide();
                $("#updateProfileFormContainerDiv").html("<div style='text-align:center;padding-top:50px;'><img src='/Content/Images/ajaxLoader.gif' /></div>");
                $.ajax({
                    url: "/Billing/ProfileUpdate/" + AutoShipID,
                    cache: false,
                    type: "get",
                    dataType: "html",
                    success: function (result) {
                        $("#updateProfileFormContainerDiv").html(result);
                    },
                    failure: function () {
                        alert("Ooops - something went wrong");
                    }
                });
            }


            function updateMeetingSuccess() {
                if ($('#ErrorCode').val() != 0) {
                    $('#addMeetingButton').hide();
                    $('#updateMeetingFormDiv').show();
                }
            };

            function updateMeetingFailure() {
                alert("Update Meeting failed");
            };

        </script>
    }
}