@model AppTrack.ViewModels.MemberActivityUpdateViewModel

<div id="memberActivityEditDiv" class="row">
    <div class="panel panel-default">
        <div class="panel-body">

            <div class="col-sm-6">
                <h4>Edit Activity</h4>
            </div>

            <div class="col-sm-6" style="text-align:right;">
                @using (Ajax.BeginForm("ActivityList", "MemberActivity", null,
                new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "POST",
                    OnFailure = "ActivitiesListFailed",
                    LoadingElementId = "ajax-loader",
                    UpdateTargetId = "activityListDiv"
                }, new { id = "editActivityListForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.SearchActivityID)
                    @Html.HiddenFor(model => model.SearchCustID)
                    @Html.HiddenFor(model => model.SearchOwnerID)
                    @Html.HiddenFor(model => model.SearchVendorID)
                    @Html.HiddenFor(model => model.SearchCategoryID)
                    @Html.HiddenFor(model => model.SearchActivityStatus)
                    @Html.HiddenFor(model => model.SearchScheduledStartDate)
                    @Html.HiddenFor(model => model.SearchScheduledEndDate)
                    @Html.HiddenFor(model => model.SearchCompletedStartDate)
                    @Html.HiddenFor(model => model.SearchCompletedEndDate)
                }
            </div>
            <div style="clear:both"></div>
            <div class="col-xs-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>

            <!-- EDIT Activity FORM -->
            <div class="filterbar" id="editActivityFormDiv">
                @using (Ajax.BeginForm("EditActivity", "MemberActivity", null,
                new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "POST",
                    OnFailure = "editActivityFailed",
                    OnSuccess = "editActivitySuccess",
                    LoadingElementId = "ajax-loader",
                    UpdateTargetId = "memberActivityEditDiv"
                }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.CustID)
                    @Html.HiddenFor(model => model.OwnerID)
                    @Html.HiddenFor(model => model.ActivityID)
                    @Html.HiddenFor(model => model.SearchActivityID)
                    @Html.HiddenFor(model => model.SearchCustID)
                    @Html.HiddenFor(model => model.SearchOwnerID)
                    @Html.HiddenFor(model => model.SearchVendorID)
                    @Html.HiddenFor(model => model.SearchCategoryID)
                    @Html.HiddenFor(model => model.SearchActivityStatus)
                    @Html.HiddenFor(model => model.SearchScheduledStartDate)
                    @Html.HiddenFor(model => model.SearchScheduledEndDate)
                    @Html.HiddenFor(model => model.SearchCompletedStartDate)
                    @Html.HiddenFor(model => model.SearchCompletedEndDate)

                    <div>
                        <div class="col-sm-6">
                            <label class="control-label">Activity Title</label>
                            <br />
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            <label class="control-label">Category</label>
                            <br />
                            @Html.DropDownListFor(model => model.CategoryID, Model.EditCategoryList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            <label class="control-label">Vendor</label>
                            <br />
                            @Html.DropDownListFor(model => model.VendorID, Model.EditActivityVendorList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.VendorID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-12">
                            <label class="control-label">Long Description</label>
                            <br />
                            @Html.TextAreaFor(model => model.Description, new { @rows = 8, @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-12">
                            <label class="control-label">Outcome</label>
                            <br />
                            @Html.TextAreaFor(model => model.Outcome, new { @rows = 8, @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Outcome, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            <label class="control-label">Contact Type</label>
                            <br />
                            @Html.DropDownListFor(model => model.ActivityType, Model.EditActivityTypeList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ActivityType, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            <label class="control-label">Status</label>
                            <br />
                            @Html.DropDownListFor(model => model.Status, Model.EditActivityStatusList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            <label class="control-label">Completed Date</label>
                            <br />
                            @Html.JQueryUI().DatepickerFor(model => model.CompletionDate, new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.SearchStartDate, new { htmlAttributes = new { @class = "form-control date-picker" } })*@
                            @Html.ValidationMessageFor(model => model.CompletionDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            <label class="control-label">&nbsp;</label>
                            <br />
                            <button class="btn btn-sm btn-info" type="submit" value="Add">Save</button>&nbsp;&nbsp;&nbsp;<span class="btn btn-sm btn-danger" onclick="hideActivityEditForm();">Cancel</span>
                        </div>
                    </div>
                    <img id="ajax-loader" src="@Url.Content("~/Content/images/ajax-loader.gif")" style="display:none;" />
                }
                <div style="clear:both;height:20px;"></div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var isSuccess = "@ViewBag.Success";
        if (isSuccess == "Y") {
            $("#editActivityListForm").submit();
        }
    });
    $("#ScheduledDate").datepicker();
    $("#CompletionDate").datepicker();

    function editActivityFailed() {
        alert("Error encountered, unable to update Activity.");
    }

    function editActivitySuccess() {
    }

    function hideActivityEditForm() {
        $("#memberActivityEditDiv").hide();
    }
</script>
