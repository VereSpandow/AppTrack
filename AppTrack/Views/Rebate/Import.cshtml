@if (ViewBag.ErrorCode == Constants.fatalErrorCode)
{
    <div id="contactContainerDiv">
        <div class="col-sm-12" style="font-size: 1.5em">
            <br />
            <br />
            The following unexpected error was encountered:
            <br />
            <br />
            <span class=" text-danger">@ViewBag.ErrorMessage</span>
            <br />
            <br />
            Please contact technical support.
        </div>
    </div>
}
else
{
    @model AppTrack.ViewModels.RebateFileUploadViewModel

    if (ViewBag.PageLayout == "")
    {
        <div style="clear:both;height:25px;"></div>
    }
    <div id="documentContainerDiv">
        <div class="col-sm-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>

        <div style="clear:both"></div>
        <div class="h2" style="float:left;width:70%;">Vendor Rebate File Upload</div>

        <div class="row" style="padding-top:10px;">
            <div class="filterbar" id="updateDocumentFormDiv">

                @using (Html.BeginForm("Import", "Rebate", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "updateDocumentForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="col-sm-12">
                        <input type="hidden" name="ErrorCode" id="ErrorCode" value="@ViewBag.ErrorCode" />

                        <div class="col-sm-3">
                            @Html.LabelFor(model => model.VendorID, htmlAttributes: new { @class = "control-label" })
                            <br />
                            @Html.DropDownListFor(model => model.VendorID, Model.VendorList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.VendorID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            @Html.LabelFor(model => model.VolumeID, htmlAttributes: new { @class = "control-label" })
                            <br />
                            @Html.DropDownListFor(model => model.VolumeID, Model.VolumeList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.VolumeID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-6">
                            <label for="file" class="control-label">Select File To Upload</label>
                            <input type="file" name="documentFile" id="documentFileID" class="form-control" />
                        </div>
                        <div class="col-sm-12 pull-right" style="text-align:right; padding-top:15px;">
                            <input type="submit" name="SubmitAction" value="Upload File" class="btn btn-xs btn-info" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <script>

            $(document).ready(function () {
                $.validator.unobtrusive.parse(updateDocumentForm);
                $('#updateDocumentFormDiv').show();
            });
    </script>
}
