@model AppTrack.ViewModels.MemberBillingReportViewModel
@{
    int thisCustID = 0;
    int thisVendorID = 0;
    ViewBag.Title = "Billing Reports";
}
<div class="container-fluid">

    <h2>Member Billing  By Type</h2>
    <div class="col-md-12 nopadding">
        <div id="chartContainer1" class="col-md-3 pull-left">
        </div>
        <div class="col-md-1"></div>
        <div id="chartContainer2" class="col-md-3 pull-left">
        </div>
        <div class="col-md-1"></div>
        <div id="chartContainer3" class="col-md-3 pull-left">
        </div>
        <div class="col-md-1"></div>
    </div>

    <div id="graph" class="aGraph" style="position:absolute;top:0px;left:0; float:left;"></div>

    <div class="col-md-8 col-md-offset-2">
        <table class="table table-hover table-striped table-responsive" id="myTable">
            <thead>
                <tr>
                    <th>
                        Status
                    </th>
                    <th>
                        Period Name
                    </th>
                    <th>
                        Total Sales
                    </th>
                    <th>
                        Total Paid
                    </th>
                    <th>
                        Total Balance Due
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.MemberBillingReportList)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PeriodName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SalesTotal)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PaidTotal)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BalanceDue)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {

    <script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script type="text/javascript" src="~/Scripts/dimple.v2.1.6.min.js"></script>
}
<script>

        $(document).ready(function () {

            $.ajaxSetup({ cache: false });
            var svg1 = dimple.newSvg("#chartContainer1", 400, 300);
            $.getJSON("../MemberBillingReport/StackedBarChartSales", function (data1) {

                chart = new dimple.chart(svg1, data1);
                var x = chart.addCategoryAxis("x", "Month", null);
                x.addOrderRule("ID");
                chart.addMeasureAxis("y", "Value1");
                chart.addSeries("Measure", dimple.plot.bar);
                //var s = chart.addSeries(["Order", "MyValue"], dimple.plot.bar);
                // s.addOrderRule("ID");
                chart.defaultColors = [
                    new dimple.color("blue") // You can use #RGB here
                ];
                chart.staggerDraw = true;
                chart.ease = "bounce";
                chart.draw(1000);
                svg1.append("text")
                    .attr("x", 200)
                    .attr("y", 20)
                    .attr("text-anchor", "middle")
                    .style("font-size", "16px")
                    .style("text-decoration", "underline")
                    .text("Total Sales");

            var svg2 = dimple.newSvg("#chartContainer2", 400, 300);

                chart = new dimple.chart(svg2, data1);
                var x = chart.addCategoryAxis("x", "Month", null);
                x.addOrderRule("ID");
                chart.addMeasureAxis("y", "Value2");
                chart.addSeries("Measure", dimple.plot.bar);
                chart.defaultColors = [
                    new dimple.color("green") // You can use #RGB here
                ];
                chart.staggerDraw = true;
                chart.ease = "bounce";
                chart.draw(1000);
                svg2.append("text")
                    .attr("x", 200)
                    .attr("y", 20)
                    .attr("text-anchor", "middle")
                    .style("font-size", "16px")
                    .style("text-decoration", "underline")
                    .text("Payments");

            var svg3 = dimple.newSvg("#chartContainer3", 400, 300);

            chart = new dimple.chart(svg3, data1);
            var x = chart.addCategoryAxis("x", "Month", null);
            x.addOrderRule("ID");
            chart.addMeasureAxis("y", "Value3");
            chart.addSeries("Measure", dimple.plot.bar);
            chart.defaultColors = [
                new dimple.color("red") // You can use #RGB here
            ];
            chart.staggerDraw = true;
            chart.ease = "bounce";
            chart.draw(1000);
            svg3.append("text")
                .attr("x", 200)
                .attr("y", 20)
                .attr("text-anchor", "middle")
                .style("font-size", "16px")
                .style("text-decoration", "underline")
                .text("Balance Due");
        });

        });

</script>
